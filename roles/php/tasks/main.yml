---
- name: Add PHP repository (Ubuntu)
  become: true
  apt_repository:
    repo: ppa:ondrej/php
  when: ansible_distribution == 'Ubuntu'

- name: Add PHP repository key (Debian)
  become: true
  apt_key:
    url: "https://packages.sury.org/php/apt.gpg"
    state: present
  when: ansible_distribution == 'Debian'

- name: Add PHP repository (Debian)
  become: true
  shell: echo "deb https://packages.sury.org/php/ $(lsb_release -sc) main" > /etc/apt/sources.list.d/php.list
  when: ansible_distribution == 'Debian'

- name: Update and upgrade packages (Ubuntu & Debian)
  become: true
  apt:
    upgrade: dist
    update_cache: yes
  when: ansible_distribution == 'Ubuntu' or ansible_distribution == 'Debian'

- name: Install PHP (Ubuntu & Debian)
  become: true
  apt:
    name: "{{ item }}"
    state: present
    force: yes
    update_cache: yes
  with_items:
  - php7.1-cli
  - php7.1-common
  - php7.1-curl
  - php7.1-dev
  - php7.1-fpm
  - php7.1-gd
  - php7.1-mbstring
  - php7.1-mcrypt
  - php7.1-opcache
  - php7.1-xml
  - php7.1-xmlrpc
  - php7.1-zip
  - php-apcu
  - php-pear
  - libyaml-dev
  when: ansible_distribution == 'Ubuntu' or ansible_distribution == 'Debian'

- name: Install PHP (Fedora)
  become: true
  dnf:
    name: "{{ item }}"
    state: present
  with_items:
  - php-cli
  - php-common
  - php-curl
  - php-fpm
  - php-gd
  - php-mbstring
  - php-mcrypt
  - php-opcache
  - php-xml
  - php-xmlrpc
  - php-zip
  - php-apcu
  - php-pear
  when: ansible_distribution == 'Fedora'

- name: Install YAML parser (Ubuntu & Debian)
  become: true
  shell: pecl install yaml-2.0.0
  when: ansible_distribution == 'Ubuntu' or ansible_distribution == 'Debian'

- name: Set PHP cgi.fix_pathinfo to 0 (Ubuntu & Debian)
  become: true
  replace:
    path: /etc/php/7.1/fpm/php.ini
    regexp: '(\s+)\;cgi\.fix_pathinfo\=1(\s+.*)?$'
    replace: '\1cgi.fix_pathinfo=0\2'
  when: ansible_distribution == 'Ubuntu' or ansible_distribution == 'Debian'

- name: Set PHP OpCache Memory Consumption to 128MB (Ubuntu & Debian)
  become: true
  replace:
    path: /etc/php/7.1/fpm/php.ini
    regexp: '(\s+)\;opcache\.memory_consumption\=128(\s+.*)?$'
    replace: '\1opcache.memory_consumption=128\2'
  when: ansible_distribution == 'Ubuntu' or ansible_distribution == 'Debian'

- name: Set PHP OpCache Interred Strings Buffer to 16MB (Ubuntu & Debian)
  become: true
  replace:
    path: /etc/php/7.1/fpm/php.ini
    regexp: '(\s+)\;opcache\.interned_strings_buffer\=8(\s+.*)?$'
    replace: '\1opcache.interned_strings_buffer=16\2'
  when: ansible_distribution == 'Ubuntu' or ansible_distribution == 'Debian'

- name: Set PHP OpCache Max Accelerated Files to 10,000 (Ubuntu & Debian)
  become: true
  replace:
    path: /etc/php/7.1/fpm/php.ini
    regexp: '(\s+)\;opcache\.max_accelerated_files\=10000(\s+.*)?$'
    replace: '\1opcache.max_accelerated_files=10000\2'
  when: ansible_distribution == 'Ubuntu' or ansible_distribution == 'Debian'

- name: Set PHP OpCache Revalidate Frequency to 60s (Ubuntu & Debian)
  become: true
  replace:
    path: /etc/php/7.1/fpm/php.ini
    regexp: '(\s+)\;opcache\.revalidate_freq\=2(\s+.*)?$'
    replace: '\1opcache.revalidate_freq=60\2'
  when: ansible_distribution == 'Ubuntu' or ansible_distribution == 'Debian'

- name: Set PHP OpCache Fast Shutdown On (Ubuntu & Debian)
  become: true
  replace:
    path: /etc/php/7.1/fpm/php.ini
    regexp: '(\s+)\;opcache\.fast_shutdown\=0(\s+.*)?$'
    replace: '\1opcache.fast_shutdown=1\2'
  when: ansible_distribution == 'Ubuntu' or ansible_distribution == 'Debian'

- name: Add "extension=yaml.so" to php.ini (Ubuntu & Debian)
  become: true
  lineinfile:
    dest: /etc/php/7.1/fpm/php.ini
    regexp: "^extension=yaml.so"
    line: "extension=yaml.so"
    state: present
  when: ansible_distribution == 'Ubuntu' or ansible_distribution == 'Debian'

- name: Add "apc.shm_size=64M" to php.ini (Ubuntu & Debian)
  become: true
  lineinfile:
    dest: /etc/php/7.1/fpm/php.ini
    regexp: "^apc.shm_size=64M"
    line: "apc.shm_size=64M"
    state: present
  when: ansible_distribution == 'Ubuntu' or ansible_distribution == 'Debian'

- name: Set PHP cgi.fix_pathinfo to 0 (Fedora)
  become: true
  replace:
    path: /etc/php.ini
    regexp: '(\s+)\;cgi\.fix_pathinfo\=1(\s+.*)?$'
    replace: '\1cgi.fix_pathinfo=0\2'
  when: ansible_distribution == 'Fedora'

- name: Set PHP OpCache Memory Consumption to 128MB (Fedora)
  become: true
  lineinfile:
    dest: /etc/php.ini
    regexp: '^opcache.memory_consumption=128'
    line: 'opcache.memory_consumption=128'
  when: ansible_distribution == 'Fedora'

- name: Set PHP OpCache Interred Strings Buffer to 16MB (Fedora)
  become: true
  lineinfile:
    dest: /etc/php.ini
    regexp: '^opcache.interned_strings_buffer=8'
    line: 'opcache.interned_strings_buffer=16'
  when: ansible_distribution == 'Fedora'

- name: Set PHP OpCache Max Accelerated Files to 10,000 (Fedora)
  become: true
  lineinfile:
    dest: /etc/php.ini
    regexp: '^opcache.max_accelerated_files=10000'
    line: 'opcache.max_accelerated_files=10000'
  when: ansible_distribution == 'Fedora'

- name: Set PHP OpCache Revalidate Frequency to 60s (Fedora)
  become: true
  lineinfile:
    dest: /etc/php.ini
    regexp: '^opcache.revalidate_freq=2'
    line: 'opcache.revalidate_freq=60'
  when: ansible_distribution == 'Fedora'

- name: Set PHP OpCache Fast Shutdown On (Fedora)
  become: true
  lineinfile:
    dest: /etc/php.ini
    regexp: '^opcache.fast_shutdown=0'
    line: 'opcache.fast_shutdown=1'
  when: ansible_distribution == 'Fedora'

- name: Add "extension=yaml.so" to php.ini (Fedora)
  become: true
  lineinfile:
    dest: /etc/php.ini
    regexp: "^extension=yaml.so"
    line: "extension=yaml.so"
    state: present
  when: ansible_distribution == 'Fedora'

- name: Add "apc.shm_size=64M" to php.ini (Fedora)
  become: true
  lineinfile:
    dest: /etc/php.ini
    regexp: "^apc.shm_size=64M"
    line: "apc.shm_size=64M"
    state: present
  when: ansible_distribution == 'Fedora'

- name: Set PHP www.conf socket (Fedora)
  become: true
  replace:
    path: /etc/php-fpm.d/www.conf
    regexp: '(\s+)\/run\/php\-fpm\/www\.sock(\s+.*)?$'
    replace: '\1/var/run/php-fpm.sock\2'
  when: ansible_distribution == 'Fedora'

- name: Restart PHP (Ubuntu & Debian)
  service:
    name: php7.1-fpm
    state: restarted
  when: ansible_distribution == 'Ubuntu' or ansible_distribution == 'Debian'

- name: Restart PHP (Fedora)
  service:
    name: php-fpm
    state: restarted
  when: ansible_distribution == 'Fedora'